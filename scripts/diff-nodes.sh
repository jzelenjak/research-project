#!/bin/bash
# Compares two AGs based on the nodes they have (presumably, AGs generated by the original and modified algorithms respectively)
# The computed statistics are:
#   - Nodes found by both algorithms
#   - Nodes found only by the original algorithm
#   - Nodes found only by the modified algorithm
#
# Note: for non-root nodes, mServ 'unknown' and 'Unknown' are treated the same
#
# NB! The comparison is based on .dot files, which are by default deleted during the execution of SAGE
#      To prevent deletion, comment out lines 2850-2851 in sage.py

set -euo pipefail
IFS=$'\n\t'

umask 077

usage="usage: $0 originalAG.dot modifiedAG.dot"

[[ $# -ne 2 ]] && { echo $usage >&2 ; exit 1; }

ORIGINAL=$1
MODIFIED=$2

! [[ -f "$ORIGINAL" ]] && { echo "$0: file $ORIGINAL does not exits" >&2 ; exit 1 ; }
! [[ -f "$MODIFIED" ]] && { echo "$0: file $MODIFIED does not exits" >&2 ; exit 1 ; }
! [[ "${ORIGINAL##*.}" == "dot" ]] && { echo "$0: file $ORIGINAL is not a .dot file" >&2 ; exit 1 ; }
! [[ "${MODIFIED##*.}" == "dot" ]] && { echo "$0: file $MODIFIED is not a .dot file" >&2 ; exit 1 ; }

echo "Vertices found by both algorithm: "
comm -12 <(gvpr 'N { print($.name) }' $ORIGINAL | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort)\
         <(gvpr 'N { print($.name) }' $MODIFIED | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort)
comm -12 <(gvpr 'N { print($.name) }' $ORIGINAL | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort)\
         <(gvpr 'N { print($.name) }' $MODIFIED | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort) | wc -l
echo -ne '\n'

echo "Vertices found only by the original algorithm: "
comm -23 <(gvpr 'N { print($.name) }' $ORIGINAL | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort)\
         <(gvpr 'N { print($.name) }' $MODIFIED | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort)
comm -23 <(gvpr 'N { print($.name) }' $ORIGINAL | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort)\
         <(gvpr 'N { print($.name) }' $MODIFIED | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort) | wc -l
echo -ne '\n'

echo "Vertices found only by the modified algorithm: "
comm -13 <(gvpr 'N { print($.name) }' $ORIGINAL | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort)\
         <(gvpr 'N { print($.name) }' $MODIFIED | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort)
comm -13 <(gvpr 'N { print($.name) }' $ORIGINAL | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort)\
         <(gvpr 'N { print($.name) }' $MODIFIED | tr -d '\r' | sed 's/ | ID: [0-9]*//g' | sed 's/^Victim: //' | tr ' ' '_' | sed 's/^\([A-Z]\?[a-z0-9-]*\)$/,\1@/' | tr -d '\n' | tr '@' '\n' | sed '/^[A-Z]/ s/Unknown/unknown/' | sort) | wc -l

