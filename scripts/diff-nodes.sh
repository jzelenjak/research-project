#!/bin/bash
# Compares two AGs based on the nodes they have (presumably, AGs generated by the original and modified algorithms respectively)
# The computed statistics are (when running in normal mode, i.e. with no options):
#   - Nodes found by both algorithms
#   - Nodes found only by the original algorithm
#   - Nodes found only by the modified algorithm
# If running in quiet mode (i.e. option -q , inspired by quick diff), the script:
#   - Prints that the graphs are different if at least one node has been found by only one of the algorithms (exit code 1)
#   - Prints nothing if there are no nodes found by only one of the algorithms (exit code 0)
#
# Note: The comparison is purely based on the nodes of the graphs (their names, to be precise).
#       If two nodes are the but are present in different places in the AGs (e.g at the beginning and end of a path), they are considered the same.
#
# NB! The comparison is based on .dot files, which are by default deleted during the execution of SAGE.
#      To prevent this deletion, set DOCKER to False.

set -euo pipefail
IFS=$'\n\t'

umask 077

usage="usage: $0 [-q] originalAG.dot modifiedAG.dot"

if [[ $# -eq 2 ]]; then 
    original="$1"
    modified="$2"
    mode="normal"
elif [[ $# -eq 3 ]]; then
    while getopts "q" option; do
        case ${option} in
            q ) mode="quiet" ;;
            \? ) { echo $usage >&2; exit 1; } ;;
        esac
    done

    original="$2"
    modified="$3"
else
    echo $usage >&2
    exit 1
fi

! [[ -f "$original" ]] && { echo "$0: file $original does not exist" >&2 ; exit 1 ; }
! [[ -f "$modified" ]] && { echo "$0: file $modified does not exist" >&2 ; exit 1 ; }
! [[ "${original##*.}" == "dot" ]] && { echo "$0: file $original is not a .dot file" >&2 ; exit 1 ; }
! [[ "${modified##*.}" == "dot" ]] && { echo "$0: file $modified is not a .dot file" >&2 ; exit 1 ; }

nodes_original=$(gvpr 'N { print(gsub(gsub($.name, "\r"), "\n", "|")) }' "$original" | sed 's/ | ID: .*//g' | sed 's/^Victim: //' | tr ' ' '_' | sort)
nodes_modified=$(gvpr 'N { print(gsub(gsub($.name, "\r"), "\n", "|")) }' "$modified" | sed 's/ | ID: .*//g' | sed 's/^Victim: //' | tr ' ' '_' | sort)

only_original=$(comm -23 <(echo -e "$nodes_original") <(echo -e "$nodes_modified"))
only_modified=$(comm -13 <(echo -e "$nodes_original") <(echo -e "$nodes_modified"))
common=$(comm -12 <(echo -e "$nodes_original") <(echo -e "$nodes_modified"))

# Running in quiet mode
if [[ "$mode" == "quiet" ]]; then
    if [[ -z "$only_original" ]] && [[ -z $only_modified ]]; then
        exit 0;
    else
        echo "Attack graphs $original and $modified are different" >&2 
        exit 1
    fi
fi

# Running in normal mode
echo "Nodes found by both algorithm: $(echo -e "$common" | wc -l)"
echo -e "$common"
echo -ne "\n"

if ! [[ -z "$only_original" ]]; then
    echo "Nodes found only by original algorithm: $(echo -e "$only_original" | wc -l)"
    echo -e "$only_original"
else
    echo "Nodes found only by original algorithm: 0"
fi

if ! [[ -z "$only_modified" ]]; then
    echo -ne "\n"
    echo "Nodes found only by modified algorithm: $(echo -e "$only_modified" | wc -l)"
    echo -e "$only_modified"
else
    echo "Nodes found only by modified algorithm: 0"
fi
