#!/bin/bash
# Compares two AGs based on the edges they have (presumably, AGs generated by the original and modified algorithms respectively)
#
# Note: The comparison is purely based on the edges of the graphs (their names and labels, to be precise).
#       If two edges are the same but are present in different places in the AGs (e.g at the beginning and end of a path), they are considered the same.
#
# NB! The comparison is based on .dot files, which are by default deleted during the execution of SAGE.
#      To prevent this deletion, set DOCKER to False.

set -euo pipefail
IFS=$'\n\t'

umask 077

usage() {
    echo -e "usage: $0 [-s] originalAG.dot modifiedAG.dot\n       $0 [-s] originalAGs/ modifiedAGs/\n\n\t-s\treport only when attack graphs are the same"
    #echo -e "Usage: $0 [-q] originalAG.dot modifiedAG.dot\n\n\t-q\treport only when attack graphs differ (do not print differences)"
}

#if [[ $# -eq 2 ]]; then 
#    original="$1"
#    modified="$2"
#    mode="normal"
#elif [[ $# -eq 3 ]]; then
#    while getopts "q" option; do
#        case ${option} in
#            q ) mode="quiet" ;;
#            \? ) { echo $usage >&2; exit 1; } ;;
#        esac
#    done
#
#    original="$2"
#    modified="$3"
#else
#    echo $usage >&2
#    exit 1
#fi
original="$1"
modified="$2"

if [[ "${original##*.}" == "dot" ]] && [[ "${modified##*.}" == "dot" ]]; then
    ! [[ -f "$original" ]] && { echo "$0: file $original does not exist" >&2 ; exit 1 ; }
    ! [[ -f "$modified" ]] && { echo "$0: file $modified does not exist" >&2 ; exit 1 ; }
    # Check that the AGs are the same when comparing their nodes and edges
    #./diff-nodes.sh -q "$original" "$modified" 1> /dev/null && ./diff-edges.sh -q "$original" "$modified" 1> /dev/null && { echo "Attack graphs $original and $modified are same" ; exit 0 ; }
    ./diff-nodes.sh -q "$original" "$modified" 1> /dev/null && ./diff-edges.sh -q "$original" "$modified" 1> /dev/null || { echo "Attack graphs $original and $modified are different" ; exit 1 ; }
elif [[ -d "$original" ]] && [[ -d "$modified" ]]; then
    original=$(echo "$original/" | tr -s '/')
    modified=$(echo "$modified/" | tr -s '/')

    exp_original=$(echo "$original" | sed 's@AGs/@@')
    exp_modified=$(echo "$modified" | sed 's@AGs/@@')
    prefix="-attack-graph-for-victim-"

    comm -12 <(find "$original" -type f -name '*.dot' -printf '%f\n' | sed 's@'"${exp_original}\.txt${prefix}"'@@' | sort)\
             <(find "$modified" -type f -name '*.dot' -printf '%f\n' | sed 's@'"${exp_modified}\.txt${prefix}"'@@' | sort) |
             sed 's@^\(.*\)$@./diff-ags.sh '"${original}${exp_original}\.txt${prefix}"'\1 '"${modified}${exp_modified}\.txt${prefix}"'\1@' |
         sh |
         sed 's/^.*'"$prefix"'\(.*\)\.dot.*$/\1/' | sed 's/^\([0-9.]\+\)-/\1|/' | sed 's/\([A-Z]\+\)/\1|/' # This line just creares consistent name (victim|mcat|mserv), instead of the default message
else
   usage >&2
   exit 1 
fi

